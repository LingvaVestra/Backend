"""remove gender from user

Revision ID: 62a583f961a7
Revises:
Create Date: 2024-01-03 20:41:49.569174

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "62a583f961a7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "category",
        sa.Column("image", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.create_index(op.f("ix_category_image"), "category", ["image"], unique=False)
    op.drop_column("user", "gender")
    op.alter_column("word", "audio", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("word", "image", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint("word_category_id_fkey", "word", type_="foreignkey")
    op.drop_column("word", "category_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "word",
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "word_category_id_fkey", "word", "category", ["category_id"], ["id"]
    )
    op.alter_column("word", "image", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("word", "audio", existing_type=sa.VARCHAR(), nullable=False)
    op.add_column(
        "user",
        sa.Column(
            "gender",
            postgresql.ENUM("MALE", "FEMALE", name="gender"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_index(op.f("ix_category_image"), table_name="category")
    op.drop_column("category", "image")
    # ### end Alembic commands ###
